"use strict";(globalThis.webpackChunk_stlite_desktop=globalThis.webpackChunk_stlite_desktop||[]).push([[9382],{29382:(t,e,i)=>{i.r(e),i.d(e,{default:()=>V});var a=i(5057),n=i(31476),s=i(95870),o=i(40807),r=i.n(o),h=i(82601),d=i(55927),l=i(11787),c=i(55177),g=i(42915),u=i(79220);const f=(0,i(45490).Z)("div",{target:"e1827qsy0"})((({theme:t})=>({"&.vega-embed":{".vega-actions":{zIndex:t.zIndices.popupMenu},summary:{height:"auto",zIndex:t.zIndices.menuButton}}})),"");var p=i(96266);const m={DATAFRAME_INDEX:"(index)"},w="source",v=new Set(["datetimeIndex","float_64Index","int_64Index","rangeIndex","timedeltaIndex","uint_64Index"]);class b extends a.PureComponent{constructor(...t){super(...t),this.vegaView=void 0,this.vegaFinalizer=void 0,this.defaultDataName=w,this.element=null,this.state={error:void 0},this.finalizeView=()=>{this.vegaFinalizer&&this.vegaFinalizer(),this.vegaFinalizer=void 0,this.vegaView=void 0},this.generateSpec=()=>{const{element:t,theme:e}=this.props,i=JSON.parse(t.get("spec")),a=JSON.parse(t.get("useContainerWidth"));if(i.config=function(t,e){const{colors:i,fontSizes:a,genericFonts:n}=e,s={labelFont:n.bodyFont,titleFont:n.bodyFont,labelFontSize:a.twoSmPx,titleFontSize:a.twoSmPx},o={background:i.bgColor,axis:{labelColor:i.bodyText,titleColor:i.bodyText,gridColor:i.fadedText10,...s},legend:{labelColor:i.bodyText,titleColor:i.bodyText,...s},title:{color:i.bodyText,subtitleColor:i.bodyText,...s},header:{labelColor:i.bodyText},view:{continuousHeight:300,continuousWidth:400}};if(!t)return o;return r()({},o,t)}(i.config,e),this.props.height?(i.width=this.props.width-38,i.height=this.props.height):a&&(i.width=this.props.width-38),i.padding||(i.padding={}),null==i.padding.bottom&&(i.padding.bottom=20),i.datasets)throw new Error("Datasets should not be passed as part of the spec");return i}}async componentDidMount(){try{await this.createView()}catch(t){const e=(0,l.b)(t);this.setState({error:e})}}componentWillUnmount(){this.finalizeView()}async componentDidUpdate(t){const{element:e,theme:i}=t,{element:a,theme:n}=this.props,o=e.get("spec"),r=a.get("spec");if(!this.vegaView||o!==r||i!==n||t.width!==this.props.width||t.height!==this.props.height){(0,s.ji)("Vega spec changed.");try{await this.createView()}catch(u){const t=(0,l.b)(u);this.setState({error:t})}return}const h=e.get("data"),d=a.get("data");(h||d)&&this.updateData(this.defaultDataName,h,d);const c=y(e)||{},g=y(a)||{};for(const[s,l]of Object.entries(g)){const t=s||this.defaultDataName,e=c[t];this.updateData(t,e,l)}for(const s of Object.keys(c))g.hasOwnProperty(s)||s===this.defaultDataName||this.updateData(s,null,null);this.vegaView.resize().runAsync()}updateData(t,e,i){if(!this.vegaView)throw new Error("Chart has not been drawn yet");if(!i||!i.get("data")){return void(this.vegaView._runtime.data.hasOwnProperty(t)&&this.vegaView.remove(t,g.truthy))}if(!e||!e.get("data"))return void this.vegaView.insert(t,x(i));const[a,n]=(0,d.oo)(e.get("data")),[o,r]=(0,d.oo)(i.get("data"));if(function(t,e,i,a,n,s){if(i!==s)return!1;if(e>=n)return!1;if(0===e)return!1;const o=t.get("data"),r=a.get("data"),h=s-1,l=e-1;if((0,d.Fm)(o,h,0)!==(0,d.Fm)(r,h,0)||(0,d.Fm)(o,h,l)!==(0,d.Fm)(r,h,l))return!1;return!0}(e,a,n,i,o,r))a<o&&this.vegaView.insert(t,x(i,a));else{const e=g.changeset().remove(g.truthy).insert(x(i));this.vegaView.change(t,e),(0,s.ji)(`Had to clear the ${t} dataset before inserting data through Vega view.`)}}async createView(){if((0,s.ji)("Creating a new Vega view."),!this.element)throw Error("Element missing.");this.finalizeView();const t=this.props.element,e=this.generateSpec(),i={ast:!0,expr:u.N},{vgSpec:a,view:n,finalize:o}=await(0,c.ZP)(this.element,e,i);this.vegaView=n,this.vegaFinalizer=o;const r=function(t){const e=y(t);if(null==e)return null;const i={};for(const[a,n]of Object.entries(e))i[a]=x(n);return i}(t),h=r?Object.keys(r):[];if(1===h.length){const[t]=h;this.defaultDataName=t}else 0===h.length&&a.data&&(this.defaultDataName=w);const d=function(t){const e=t.get("data");if(!e)return null;return x(e)}(t);if(d&&n.insert(this.defaultDataName,d),r)for(const[s,l]of Object.entries(r))n.insert(s,l);await n.runAsync(),this.vegaView.resize().runAsync()}render(){if(this.state.error)throw this.state.error;return(0,p.jsx)(f,{"data-testid":"stVegaLiteChart",ref:t=>{this.element=t}})}}function y(t){if(!t.get("datasets")||t.get("datasets").isEmpty())return null;const e={};return t.get("datasets").forEach((t=>{if(!t)return;const i=t.get("hasName")?t.get("name"):null;e[i]=t.get("data")})),e}function x(t,e=0){if(!t.get("data"))return[];if(!t.get("index"))return[];if(!t.get("columns"))return[];const i=[],[a,n]=(0,d.oo)(t.get("data")),s=t.get("index").get("type"),o=v.has(s);for(let r=e;r<a;r++){const e={};o&&(e[m.DATAFRAME_INDEX]=(0,d.l$)(t.get("index"),0,r));for(let i=0;i<n;i++)e[(0,d.l$)(t.get("columns"),0,i)]=(0,d.Fm)(t.get("data"),i,r);i.push(e)}return i}const V=(0,n.b)((0,h.Z)(b))}}]);