(()=>{"use strict";var e={56977:e=>{function t(e){if("string"!==typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function n(e,t){for(var n,r="",o=0,s=-1,i=0,a=0;a<=e.length;++a){if(a<e.length)n=e.charCodeAt(a);else{if(47===n)break;n=47}if(47===n){if(s===a-1||1===i);else if(s!==a-1&&2===i){if(r.length<2||2!==o||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var l=r.lastIndexOf("/");if(l!==r.length-1){-1===l?(r="",o=0):o=(r=r.slice(0,l)).length-1-r.lastIndexOf("/"),s=a,i=0;continue}}else if(2===r.length||1===r.length){r="",o=0,s=a,i=0;continue}t&&(r.length>0?r+="/..":r="..",o=2)}else r.length>0?r+="/"+e.slice(s+1,a):r=e.slice(s+1,a),o=a-s-1;s=a,i=0}else 46===n&&-1!==i?++i:i=-1}return r}var r={resolve:function(){for(var e,r="",o=!1,s=arguments.length-1;s>=-1&&!o;s--){var i;s>=0?i=arguments[s]:(void 0===e&&(e=process.cwd()),i=e),t(i),0!==i.length&&(r=i+"/"+r,o=47===i.charCodeAt(0))}return r=n(r,!o),o?r.length>0?"/"+r:"/":r.length>0?r:"."},normalize:function(e){if(t(e),0===e.length)return".";var r=47===e.charCodeAt(0),o=47===e.charCodeAt(e.length-1);return 0!==(e=n(e,!r)).length||r||(e="."),e.length>0&&o&&(e+="/"),r?"/"+e:e},isAbsolute:function(e){return t(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,n=0;n<arguments.length;++n){var o=arguments[n];t(o),o.length>0&&(void 0===e?e=o:e+="/"+o)}return void 0===e?".":r.normalize(e)},relative:function(e,n){if(t(e),t(n),e===n)return"";if((e=r.resolve(e))===(n=r.resolve(n)))return"";for(var o=1;o<e.length&&47===e.charCodeAt(o);++o);for(var s=e.length,i=s-o,a=1;a<n.length&&47===n.charCodeAt(a);++a);for(var l=n.length-a,c=i<l?i:l,d=-1,u=0;u<=c;++u){if(u===c){if(l>c){if(47===n.charCodeAt(a+u))return n.slice(a+u+1);if(0===u)return n.slice(a+u)}else i>c&&(47===e.charCodeAt(o+u)?d=u:0===u&&(d=0));break}var g=e.charCodeAt(o+u);if(g!==n.charCodeAt(a+u))break;47===g&&(d=u)}var f="";for(u=o+d+1;u<=s;++u)u!==s&&47!==e.charCodeAt(u)||(0===f.length?f+="..":f+="/..");return f.length>0?f+n.slice(a+d):(a+=d,47===n.charCodeAt(a)&&++a,n.slice(a))},_makeLong:function(e){return e},dirname:function(e){if(t(e),0===e.length)return".";for(var n=e.charCodeAt(0),r=47===n,o=-1,s=!0,i=e.length-1;i>=1;--i)if(47===(n=e.charCodeAt(i))){if(!s){o=i;break}}else s=!1;return-1===o?r?"/":".":r&&1===o?"//":e.slice(0,o)},basename:function(e,n){if(void 0!==n&&"string"!==typeof n)throw new TypeError('"ext" argument must be a string');t(e);var r,o=0,s=-1,i=!0;if(void 0!==n&&n.length>0&&n.length<=e.length){if(n.length===e.length&&n===e)return"";var a=n.length-1,l=-1;for(r=e.length-1;r>=0;--r){var c=e.charCodeAt(r);if(47===c){if(!i){o=r+1;break}}else-1===l&&(i=!1,l=r+1),a>=0&&(c===n.charCodeAt(a)?-1===--a&&(s=r):(a=-1,s=l))}return o===s?s=l:-1===s&&(s=e.length),e.slice(o,s)}for(r=e.length-1;r>=0;--r)if(47===e.charCodeAt(r)){if(!i){o=r+1;break}}else-1===s&&(i=!1,s=r+1);return-1===s?"":e.slice(o,s)},extname:function(e){t(e);for(var n=-1,r=0,o=-1,s=!0,i=0,a=e.length-1;a>=0;--a){var l=e.charCodeAt(a);if(47!==l)-1===o&&(s=!1,o=a+1),46===l?-1===n?n=a:1!==i&&(i=1):-1!==n&&(i=-1);else if(!s){r=a+1;break}}return-1===n||-1===o||0===i||1===i&&n===o-1&&n===r+1?"":e.slice(n,o)},format:function(e){if(null===e||"object"!==typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var n=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return n?n===t.root?n+r:n+e+r:r}("/",e)},parse:function(e){t(e);var n={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return n;var r,o=e.charCodeAt(0),s=47===o;s?(n.root="/",r=1):r=0;for(var i=-1,a=0,l=-1,c=!0,d=e.length-1,u=0;d>=r;--d)if(47!==(o=e.charCodeAt(d)))-1===l&&(c=!1,l=d+1),46===o?-1===i?i=d:1!==u&&(u=1):-1!==i&&(u=-1);else if(!c){a=d+1;break}return-1===i||-1===l||0===u||1===u&&i===l-1&&i===a+1?-1!==l&&(n.base=n.name=0===a&&s?e.slice(1,l):e.slice(a,l)):(0===a&&s?(n.name=e.slice(1,i),n.base=e.slice(1,l)):(n.name=e.slice(a,i),n.base=e.slice(a,l)),n.ext=e.slice(i,l)),a>0?n.dir=e.slice(0,a-1):s&&(n.dir="/"),n},sep:"/",delimiter:":",win32:null,posix:null};r.posix=r,e.exports=r}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;!function(e){function t(e){return null===e||"boolean"===typeof e||"number"===typeof e||"string"===typeof e}function n(e){return Array.isArray(e)}function r(e,o){if(e===o)return!0;if(t(e)||t(o))return!1;var s=n(e),i=n(o);return s===i&&(s&&i?function(e,t){if(e===t)return!0;if(e.length!==t.length)return!1;for(var n=0,o=e.length;n<o;++n)if(!r(e[n],t[n]))return!1;return!0}(e,o):function(e,t){if(e===t)return!0;for(var n in e)if(void 0!==e[n]&&!(n in t))return!1;for(var n in t)if(void 0!==t[n]&&!(n in e))return!1;for(var n in e){var o=e[n],s=t[n];if(void 0!==o||void 0!==s){if(void 0===o||void 0===s)return!1;if(!r(o,s))return!1}}return!0}(e,o))}function o(e){return t(e)?e:n(e)?function(e){for(var t=new Array(e.length),n=0,r=e.length;n<r;++n)t[n]=o(e[n]);return t}(e):function(e){var t={};for(var n in e){var r=e[n];void 0!==r&&(t[n]=o(r))}return t}(e)}e.emptyObject=Object.freeze({}),e.emptyArray=Object.freeze([]),e.isPrimitive=t,e.isArray=n,e.isObject=function(e){return!t(e)&&!n(e)},e.deepEqual=r,e.deepCopy=o}(e||(e={}));!function(){function e(){this._types=[],this._values=[]}e.prototype.types=function(){return this._types.slice()},e.prototype.hasData=function(e){return-1!==this._types.indexOf(e)},e.prototype.getData=function(e){var t=this._types.indexOf(e);return-1!==t?this._values[t]:void 0},e.prototype.setData=function(e,t){this.clearData(e),this._types.push(e),this._values.push(t)},e.prototype.clearData=function(e){var t=this._types.indexOf(e);-1!==t&&(this._types.splice(t,1),this._values.splice(t,1))},e.prototype.clear=function(){this._types.length=0,this._values.length=0}}();var t,r,o=function(){function e(){var e=this;this.promise=new Promise((function(t,n){e._resolve=t,e._reject=n}))}return e.prototype.resolve=function(e){(0,this._resolve)(e)},e.prototype.reject=function(e){(0,this._reject)(e)},e}();function s(e){for(var t=0,n=0,r=e.length;n<r;++n)n%4===0&&(t=4294967295*Math.random()>>>0),e[n]=255&t,t>>>=8}!function(e){e.getRandomValues=function(){var e="undefined"!==typeof window&&(window.crypto||window.msCrypto)||null;return e&&"function"===typeof e.getRandomValues?function(t){return e.getRandomValues(t)}:s}()}(t||(t={})),function(e){e.uuid4=function(e){for(var t=new Uint8Array(16),n=new Array(256),r=0;r<16;++r)n[r]="0"+r.toString(16);for(r=16;r<256;++r)n[r]=r.toString(16);return function(){return e(t),t[6]=64|15&t[6],t[8]=128|63&t[8],n[t[0]]+n[t[1]]+n[t[2]]+n[t[3]]+"-"+n[t[4]]+n[t[5]]+"-"+n[t[6]]+n[t[7]]+"-"+n[t[8]]+n[t[9]]+"-"+n[t[10]]+n[t[11]]+n[t[12]]+n[t[13]]+n[t[14]]+n[t[15]]}}(t.getRandomValues)}(r||(r={}));var i=n(56977),a=n.n(i);function l(e,t){const n=a().normalize(t),r=a().dirname(n).split("/"),o=[];for(const i of r){o.push(i);const t=o.join("/");if(e.FS.analyzePath(t).exists){if(e.FS.isDir(t))throw new Error(`"${t}" already exists and is not a directory.`)}else try{e.FS.mkdir(t)}catch(s){throw console.error(`Failed to create a directory "${t}"`),s}}}function c(e,t,n,r){l(e,t),e.FS.writeFile(t,n,r)}function d(e){e.forEach((e=>{let t;try{t=new URL(e)}catch(n){return}if("emfs:"===t.protocol||"file:"===t.protocol)throw new Error(`"emfs:" and "file:" protocols are not allowed for the requirement (${e})`)}))}function u(e){e.runPython('\nimport micropip\nmicropip.add_mock_package(\n    "pyarrow", "0.0.1",\n    modules={\n        "pyarrow": """\n__version__ = \'0.0.1\'  # TODO: Update when releasing\n\n\nclass Table:\n    @classmethod\n    def from_pandas(*args, **kwargs):\n        raise NotImplementedError("stlite is not supporting this method.")\n"""\n    }\n)\n')}var g=function(e,t,n,r){return new(n||(n=Promise))((function(o,s){function i(e){try{l(r.next(e))}catch(t){s(t)}}function a(e){try{l(r.throw(e))}catch(t){s(t)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}l((r=r.apply(e,t||[])).next())}))};let f,p;const h=self,m=new o;function y(e){h.postMessage({type:"event:progress",data:{message:e}})}const v="https://cdn.jsdelivr.net/pyodide/v0.23.3/full/pyodide.js";const b=function(){return g(this,void 0,void 0,(function*(){const{entrypoint:e,files:t,archives:n,requirements:r,wheels:o,mountedSitePackagesSnapshotFilePath:s,pyodideUrl:i=v}=yield m.promise;if(y("Loading Pyodide."),console.debug("Loading Pyodide"),f=yield function(e,t){return g(this,void 0,void 0,(function*(){const n=e.slice(0,e.lastIndexOf("/")+1);let r;return e.endsWith(".mjs")?r=(yield import(e)).loadPyodide:(importScripts(e),r=self.loadPyodide),r(Object.assign(Object.assign({},t),{indexURL:n}))}))}(i,{stdout:console.log,stderr:console.error}),console.debug("Loaded Pyodide"),y("Mounting files."),yield Promise.all(Object.keys(t).map((e=>g(this,void 0,void 0,(function*(){const n=t[e];let r;"url"in n?(console.debug(`Fetch a file from ${n.url}`),r=yield fetch(n.url).then((e=>e.arrayBuffer())).then((e=>new Uint8Array(e)))):r=n.data;const{opts:o}=t[e];console.debug(`Write a file "${e}"`),c(f,e,r,o)}))))),y("Unpacking archives."),yield Promise.all(n.map((e=>g(this,void 0,void 0,(function*(){let t;"url"in e?(console.debug(`Fetch an archive from ${e.url}`),t=yield fetch(e.url).then((e=>e.arrayBuffer()))):t=e.buffer;const{format:n,options:r}=e;console.debug("Unpack an archive",{format:n,options:r}),f.unpackArchive(t,n,r)}))))),s)y("Restoring the snapshot."),yield f.runPythonAsync("import tarfile, shutil, site"),yield f.runPythonAsync("\n      site_packages_dirs = site.getsitepackages()\n      for site_packages in site_packages_dirs:\n          shutil.rmtree(site_packages)\n    "),console.debug(`Unarchive ${s}`),yield f.runPythonAsync(`\n      with tarfile.open("${s}", "r") as tar_gz_file:\n          tar_gz_file.extractall("/")\n    `),console.debug("Restored the snapshot"),y("Mocking some packages."),console.debug("Mock pyarrow"),u(f),console.debug("Mocked pyarrow");else{if(!o)throw new Error("Neither snapshot nor wheel files are provided.");{y("Installing streamlit and its dependencies."),console.debug("Loading stlite-server, and streamlit"),yield f.loadPackage("micropip");const e=f.pyimport("micropip");yield e.install.callKwargs([o.stliteServer],{keep_going:!0}),yield e.install.callKwargs([o.streamlit],{keep_going:!0}),console.debug("Loaded stlite-server, and streamlit"),y("Mocking some packages."),console.debug("Mock pyarrow"),u(f),console.debug("Mocked pyarrow")}}if(r.length>0){y("Installing the requirements."),console.debug("Installing the requirements:",r),d(r),yield f.loadPackage("micropip");const e=f.pyimport("micropip");yield e.install.callKwargs(r,{keep_going:!0}),console.debug("Installed the requirements:",r)}yield f.runPythonAsync("\n    import importlib\n    importlib.invalidate_caches()\n  "),y("Loading streamlit package."),console.debug("Loading the Streamlit package"),yield f.runPythonAsync("\n      import streamlit.runtime\n      import streamlit.web\n  "),console.debug("Loaded the Streamlit package"),y("Setting up the loggers."),console.debug("Setting the loggers"),yield f.runPythonAsync("\n      import logging\n      import streamlit.logger\n\n      streamlit.logger.get_logger = logging.getLogger\n      streamlit.logger.setup_formatter = None\n      streamlit.logger.update_formatter = lambda *a, **k: None\n      streamlit.logger.set_log_level = lambda *a, **k: None\n  ");self.__logCallback__=e=>{e.startsWith("CRITICAL")||e.startsWith("ERROR")?console.error(e):e.startsWith("WARNING")?console.warn(e):e.startsWith("INFO")?console.info(e):e.startsWith("DEBUG")?console.debug(e):console.log(e)},yield f.runPythonAsync('\n      from js import __logCallback__\n\n\n      class JsHandler(logging.Handler):\n          def emit(self, record):\n              msg = self.format(record)\n              __logCallback__(msg)\n\n\n      main_formatter = logging.Formatter("%(levelname)s:%(name)s:%(message)s")\n\n      js_handler = JsHandler()\n      js_handler.setFormatter(main_formatter)\n\n      root_logger = logging.getLogger()\n      root_logger.handlers.clear()\n      root_logger.addHandler(js_handler)\n      root_logger.setLevel(logging.DEBUG)\n\n      streamlit_handler = logging.getLogger("streamlit")\n      streamlit_handler.setLevel(logging.DEBUG)\n  '),console.debug("Set the loggers"),y("Mocking some Streamlit functions for the browser environment."),console.debug("Mocking some Streamlit functions"),yield f.runPythonAsync("\n    import streamlit\n\n    def is_cacheable_msg(msg):\n        return False\n\n    streamlit.runtime.runtime.is_cacheable_msg = is_cacheable_msg\n  "),console.debug("Mocked some Streamlit functions"),y("Booting up the Streamlit server."),console.debug("Booting up the Streamlit server"),yield f.runPythonAsync(`\n    from stlite_server.bootstrap import load_config_options, prepare\n    from stlite_server.server import Server\n\n    load_config_options({\n        "browser.gatherUsageStats": False,\n        "runner.fastReruns": False,  # Fast reruns do not work well with the async script runner of stlite. See https://github.com/whitphx/stlite/pull/550#issuecomment-1505485865.\n    })\n\n    main_script_path = "${e}"\n    command_line = None\n    args = []\n\n    prepare(main_script_path, args)\n\n    server = Server(main_script_path, command_line)\n    server.start()\n  `),console.debug("Booted up the Streamlit server"),console.debug("Setting up the HTTP server"),p=f.globals.get("server").copy(),console.debug("Set up the HTTP server"),h.postMessage({type:"event:loaded"})}))}().catch((e=>{throw h.postMessage({type:"event:error",data:{error:e}}),e}));self.onmessage=e=>g(void 0,void 0,void 0,(function*(){const t=e.data;if("initData"===t.type)return void m.resolve(t.data);yield b;const n=e.ports[0];try{switch(t.type){case"websocket:connect":{console.debug("websocket:connect",t.data);const{path:e}=t.data;p.start_websocket(e,((e,t)=>{if(t){const t=e.getBuffer("u8");e.destroy();const n=new Uint8ClampedArray(t.data.buffer,t.data.byteOffset,t.data.byteLength);h.postMessage({type:"websocket:message",data:{payload:new Uint8Array(n)}})}else h.postMessage({type:"websocket:message",data:{payload:e}})})),n.postMessage({type:"reply"});break}case"websocket:send":{console.debug("websocket:send",t.data);const{payload:e}=t.data;p.receive_websocket_from_js(e);break}case"http:request":{console.debug("http:request",t.data);const{request:e}=t.data,r=(e,t,r)=>{const o=t.toJs(),s=r.toJs();console.debug({statusCode:e,headers:o,body:s});const i={type:"http:response",data:{response:{statusCode:e,headers:o,body:s}}};n.postMessage(i)};p.receive_http_from_js(e.method,e.path,e.headers,e.body,r);break}case"file:write":{const{path:e,data:r,opts:o}=t.data;console.debug(`Write a file "${e}"`),c(f,e,r,o),n.postMessage({type:"reply"});break}case"file:rename":{const{oldPath:e,newPath:r}=t.data;console.debug(`Rename "${e}" to ${r}`),function(e,t,n){l(e,n),e.FS.rename(t,n)}(f,e,r),n.postMessage({type:"reply"});break}case"file:unlink":{const{path:e}=t.data;console.debug(`Remove "${e}`),f.FS.unlink(e),n.postMessage({type:"reply"});break}case"install":{const{requirements:e}=t.data,r=f.pyimport("micropip");console.debug("Install the requirements:",e),d(e),yield r.install.callKwargs(e,{keep_going:!0}).then((()=>{if(e.includes("matplotlib"))return f.runPythonAsync("\n                from stlite_server.bootstrap import _fix_matplotlib_crash\n                _fix_matplotlib_crash()\n              ")})).then((()=>{console.debug("Successfully installed"),n.postMessage({type:"reply"})}))}}}catch(r){n.postMessage({type:"reply",error:r})}})),h.postMessage({type:"event:start"})})()})();